<apex:page controller="ImageCapture" standardStylesheets="false" showHeader="false">
    
    
    <video id="player" autoplay='true'  controls ='muted'  width='320' height='240'></video> 
    <button id="capture">Capture</button>
    <canvas id="canvas" width='320' height='240'></canvas>
    <h1></h1>
    <br/>
    
    <table id ="cardoutput">
  <tr>
    <th width = "300"></th>
    <th></th>
    
  </tr>

 
</table>
    
    <script>
    
    const player = document.getElementById('player');
    const canvas = document.getElementById('canvas');
    const context = canvas.getContext('2d');
    const captureButton = document.getElementById('capture');
    
    const constraints = {
        video: true,
    };
    
    captureButton.addEventListener('click', () => {
        context.drawImage(player, 0, 0, canvas.width, canvas.height);
        var myImage = canvas.toDataURL("image/png").replace("image/png", "image/octet-stream");
        console.log(myImage);
        // Stop all video streams.
        player.srcObject.getVideoTracks().forEach(track => track.stop());   
        
        ImageCapture.saveFile(myImage,function(result,event){
        if(event.status)
        {
        console.log(result);
        var table = document.getElementById("cardoutput");
        const count = 0;
        for (const [key, value] of Object.entries(result)) {
        var row = table.insertRow(count);
        var cell1 = row.insertCell(0);
		var cell2 = row.insertCell(1);
        cell1.innerHTML = key;
		cell2.innerHTML = value;
        
  console.log(key, value);
}
        
				}
        
        
    
    });
        
        
    });
        
        navigator.mediaDevices.getUserMedia(constraints)
        .then((stream) => {
        // Attach the video stream to the video element and autoplay.
        player.srcObject = stream;
    });
        
       
        </script>
    
</apex:page>

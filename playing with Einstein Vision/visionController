//PLEASE NOTE !!!! this is all code writen using publically available documentation and this application was built as a POC
//This should not be considered as a production application but as a set of ideas and examples to experiment with
//Any use of this code is at your own risk with no warranty or guarantee as to fitness of purpose.



public class VisionController {
    public enum formTypes {dl, passport, paystub, permanentResident, w2,tenForty}
    public enum tasks {contact, form, table, text}
    public string modelId = 'OCRModel';
        
        

    
    // You can upload the `einstein_platform.pem` into your Salesforce org as `File` sObject and read it as below
    public String getAccessToken() {
        // Ignore the File upload part and "jwt.pkcs" if you used a Salesforce certificate to sign up 
        // for an Einstein Platform account
        // THIS IS HOW YOUR PRIVATE ACCESS KEY IS GOT! IT IS STORED IN A CONTENT DOCUMENT
        ContentVersion base64Content = [SELECT Title, VersionData FROM ContentVersion where Title='einstein_platform' OR  Title='predictive_services' ORDER BY Title LIMIT 1];
        String keyContents = base64Content.VersionData.tostring();
        keyContents = keyContents.replace('-----BEGIN RSA PRIVATE KEY-----', '');
        keyContents = keyContents.replace('-----END RSA PRIVATE KEY-----', '');
        keyContents = keyContents.replace('\n', '');

        // Get a new token
        JWT jwt = new JWT('RS256');
        // jwt.cert = 'JWTCert'; // Uncomment this if you used a Salesforce certificate to sign up for an Einstein Platform account
        jwt.pkcs8 = keyContents; // Comment this if you are using jwt.cert
        jwt.iss = 'developer.force.com';
        jwt.sub = 'your.email@comany.com'; //the email you registers for your Einstein vision account with
        jwt.aud = 'https://api.einstein.ai/v2/oauth2/token';
        jwt.exp = '3600';
        String access_token = JWTBearerFlow.getAccessToken('https://api.einstein.ai/v2/oauth2/token', jwt);
        return access_token;    
    }

    public List<Vision.Prediction> getCallVisionUrl() {
        // Get a new token
        String access_token = getAccessToken();
    
        // Make a prediction using URL to a file
        return Vision.predictUrl('https://einstein.ai/images/generalimage.jpg',access_token,'GeneralImageClassifier');
    }

    public List<Vision.Prediction> getCallVisionContent(String docId) {//'0694x0000020zqcAAA'
        // Get a new token
        String access_token = getAccessToken();

        // Make a prediction for an image stored in Salesforce
        // by passing the file as blob which is then converted to base64 string
        ContentVersion content = [SELECT Title,VersionData FROM ContentVersion where contentdocumentId =:docId  LIMIT 1];
        return Vision.predictBlob(content.VersionData, access_token,'V5H7SSVQ3ENWKI225XEQ63XBVQ'); 
        // NOTE V5H7SSVQ3ENWKI225XEQ63XBVQ is the image classification Model Id for my trained model. This should not be hard coded but should be a passed in Paramenter!!
    }
    
    
    public string getOCRReponse(String docId,string docType){
        String access_token = getAccessToken();
        ContentVersion content = [SELECT Title,VersionData FROM ContentVersion where contentdocumentId =:docId  LIMIT 1];
        return EinsteinOCR.extractText(content.VersionData, access_token, 'OCRModel','form',docType,'MyTest');

        
    }
}

global with sharing class ImageCapture {
    
    //public ContentVersion cont {get;set;}
    
    @RemoteAction
    global static Map<string,String> saveFile(string versiondata)
    {
        Map<string,String> output = new Map<string,String>();
        List<String> parts = versiondata.split(',');
        
        blob b = EncodingUtil.base64Decode(parts[1]);    
        System.debug('hello world');
        ContentVersion cont = new ContentVersion();
        //PathOnClient is Mandatory
        cont.title ='Test';
        // cont.PathOnClient = cont.title;
        cont.VersionData = blob.valueOf(versiondata);
        VisionController vc = new VisionController();
        String access_token = vc.getAccessToken();
        string Card =  EinsteinOCR.blobExtractText(b, access_token, 'OCRModel','contact');
        output = (ReadCard(card));
        //By default Origin value is "C" that means Content must be enabled in Org, so we need to explicitly set Origin as H
        cont.Origin = 'H';
        //insert cont;
        system.debug('/'+cont.id);
        return output;
        //redirect to path where file is saved
        //return new PageReference('/'+cont.id);
    }
    
    
    global static Map<string,String> ReadCard(string jsonInput){
        Map<string,String> output = new Map<string,String>();
        Map<String, Object> card = (Map<String, Object>)JSON.deserializeUntyped(jsonInput);   
        List<Object> prodabilities = (List<Object>)card.get('probabilities');
        
        For(object ob : prodabilities){
            System.debug(ob);      
            Map<String, Object> values = (Map<String, Object>)ob;
            Map<String, Object> attribs = (Map<String, Object>)values.get('attributes');       
            system.debug(attribs.get('tag') + ' = ' +values.get('label'));
            String check = (string)values.get('label');
            check = check.trim();
            if(check == 'Fax'){continue; } 
            if(check == 'Phone'){continue; } 
            System.debug((string)attribs.get('tag'));
            System.debug((string)attribs.get('tag'));
            If(output.containsKey((string)attribs.get('tag'))){
                
                string myS = output.get((string)attribs.get('tag'));
                
                myS += ';' + (string)values.get('label'); 
                output.put((string)attribs.get('tag'),MyS);    
            }
            else 
            {
                output.put((string)attribs.get('tag'),(string)values.get('label'));
            }
            
        }
        return output;
    }
}
